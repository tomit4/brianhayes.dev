doctype html
html(lang = "en")
    head
        title brianhayes.dev
        meta(charset='UTF-8')
        meta(name='viewport' content='width=device-width, initial-scale=1')
        meta(name="robots" content="follow, index, max-snippet:-1, max-image-preview:large")
        meta(name='description' content='A simple blog written by a Web Developer, for Web Developers. Covering Basics of HTML, CSS, JavaScript, and much more, including Linux and other subjects related to technology.')
        script(src="../toggle-temp.js")
        link(rel="icon" type="image/x-icon" href="../assets/icons/favicon.png")
        link(rel='icon' type='application/rss+xml' title='RSS Feed' href='../assets/feed.rss')
        link(rel='stylesheet' type='text/css' href='../css/style.css')
        link(rel="preload" href="../css/style.css" as="style" onload="this.onload=null;this.rel='stylesheet'")
        noscript
            link(rel="stylesheet" href="../css/style.css")
    body
        nav
            ul.nav-menu(role="menu")
                li.nav-items(role="menuitem")
                    a.icons#contact(aria-label="email" role="menuitem" href="mailto: brianhayes.dev@protonmail.com") contact
                li.nav-items(role="menuitem")
                    a.icons#folio(aria-label="folio" role="navigation" href="../folio.html") folio
                li.nav-items(role="menuitem")
                    a.icons#home(aria-label="home" role="navigation" href="../index.html") home
                li.nav-items(role="menuitem")
                    a.icons#blog(aria-label="blog" role="navigation" href="/blog/") blog
                li.nav-items(role="menuitem")
                    a.icons#rss(aria-label="rss" role="menuitem" href="../assets/feed.rss") rss
        div.nav-division
        div.nav-text
            ul.nav-text-menu(role="menu")
                li.nav-text-items(role="menubar")
                    div.nav-text-item#text-contact(aria-label="email" role="menuitem") email
                li.nav-text-items(role="menubar")
                    div.nav-text-item#text-folio(aria-label="folio-text" role="menuitem") folio
                li.nav-text-items(role="menubar")
                    div.nav-text-item#text-home(aria-label="home-text" role="menuitem") home
                li.nav-text-items(role="menubar")
                    div.nav-text-item#text-blog(aria-label="blog-text" role="menuitem") blog
                li.nav-text-items(role="menubar")
                    div.nav-text-item#text-rss(aria-label="rss-text" role="menuitem") rss 
        div.container.fadein
            div.arrows
                a.icons#left-arrow(aria-label="previous" role="navigation" href="")
                a.icons#right-arrow(aria-label="next" role="navigation" href="")
            div.arrows-text
                span.arrow-text#text-left-arrow prev
                span.arrow-text#text-right-arrow next
            main.title
                div.title-card
                    header JavaScript
                    div.subtitle The Web's Muscles
                    div.aside Published on 
                        time(datetime="2023-06-25") 2023-06-25
                picture(role="img")
                    source(media="(min-width: 62.5em)" srcset="../assets/images/intro_images/start_100m_desktop.jpg")
                    source(media="(min-width: 37.5em)" srcset="../assets/images/intro_images/start_100m_tablet.jpg")
                    img.intro-image(src="../assets/images/intro_images/start_100m_mobile.jpg" alt="A 100M Dash in Lisse, Zuid-Holland, circa 1968" title="A 100M Dash in Lisse, Zuid-Holland, circa 1968" cite="https://commons.wikimedia.org/wiki/File:Start_100m_dames._Lidy_Makkinje-Vonk,_Corrie_Bakker,_Wilma_van_der_Berg,_C._Civa,_Bestanddeelnr_921-3633.jpg?useskin=vector")
                figcaption A 100M Dash in Lisse, Zuid-Holland, circa 1968
                blockquote(cite="https://pdfroom.com/books/you-dont-know-js-async-performance/zW5n16ox2Nq") &#8220The only thing worse than not knowing why some code breaks is not knowing why it worked in the first place! It's the classic &#8216house of cards&#8217 mentality: &#8216it works, but I'm not sure why, so nobody touch it!&#8217 You may have heard, &#8216Hell is other people&#8127 (Sartre), and the programmer meme twist, &#8216Hell is other people's code.&#8217 I believe truly: &#8216Hell is not understanding my own code.&#8217 &#8221
                    div.quote_author -Kyle Simpson
            article.demo-button
                h1 Introduction
                p You may have noticed that this article's publish date is far later than my previous article on <a class="inline-link" aria-label="link to article, css, the web's makeup" role="link" href="./css_the_webs_makeup.html">CSS: The Web's Makeup</a>. While this is mainly due to other responsibilities which have as of recent required my attention, I must also admit that I have been a bit intimidated on writing on the subject of JavaScript. JavaScript is the first programming language I ever learned, and I am still continuing to learn it. Thusly, I don't yet feel I have any authority to write on the subject of JavaScript, even in the context of this article, which is meant as an introduction.
                p Nevertheless, in the context of introducing you, the reader, to the general tools of the web, I cannot avoid talking on the incredibly large role JavaScript has played in bringing the web to the state it is in today. I have come across many social media posts that joke/deride JavaScript for no longer being a programming language reserved solely to the realm of the web, but rather has pervaded into nearly every facet of modern computer applications. 
                p Indeed with the arrival of the JavaScript runtime, NodeJS, the Electron Software Framework, and the React Native Framework, JavaScript has made its way from its humble beginnings as a simple scripting language meant solely to add small bits of interactivity to web pages, to a full fledged programming language that can interact with native C libraries directly on your computer (NodeJS), interact with User Interface libraries to write desktop applications (Electron), and even write platform agnostic mobile applications (React Native). It is not an understatement to say that JavaScript is everywhere!
                p Perhaps you might now understand my reluctance to cover such a vast subject, as a single article, even one that attempts to be an introduction to the very basic aspects of the language, can only barely scratch the surface of the subject that is JavaScript. Indeed, entire blogs, books, videos, and podcasts have been produced that solely revolve around The JavaScript Programming Language and the vast ecosystem around it. 
                p JavaScript is both beloved and hated by programmers for a wide variety of reasons, sometimes justified, sometimes not, a topic I will briefly touch on later in this article. Regardless, JavaScript has long been, and continues to be, one of the most popular programming languages in the world due to its ubiquity within the world wide web. In short, with the rise of the web, so too went JavaScript. 
                p Even if it is not one's intent to become a web developer, it is in my humble opinion that it is worthwhile for anyone looking to create any substantial application on the web to at least have a basic familiarity with JavaScript's syntax, especially when it comes to how it interacts with the Document Object Model.
                p This will certainly not be my only article written which involves JavaScript in the context of programming, and I am sure to not cover the entirety of the JavaScript programming language in this short article. Nevertheless, in this article, it is my hope to give you a basic understanding of JavaScript and by extension, core programming concepts. This will include the basics of variable declaration and usage, boolean statements, conditionals, function declarations, arrays, objects, and finally basic interactions with the console and document objects. Firstly, however, I feel it is important to briefly overview what is JavaScript and it's history.
                h2 What Is JavaScript?
                p JavaScript is a high level programming language that originally was created to add interactivity to HTML elements after the page had loaded. The language is dynamically typed, supporting prototype based object oriented as well as functional and imperative programming styles. All major web browsers include a dedicated JavaScript engine which executes code on the user's device. On its own, JavaScript does not have native interfaces for interacting with standard Input/Output (I/O), unlike lower level languages, but JavaScript is often utilized with a wide array of APIs via a runtime system native to the browser, which facilitates interactivity with I/O.
                p As mentioned in the introduction, JavaScript is no longer solely the domain of client side scripting on the browser. That said, JavaScript still is predominantly utilized for client side scripting to add interactivity to the browser via scripted events which are generally utilized to add interactive behavior to the web. Examples of this interactive behavior include:
                ul
                    li
                        p Loading new content to the web page without reloading the entire page.
                    li
                        p Interacting with HTML elements via dynamically changing CSS attributes to add animations
                    li
                        p Validating Input Forms
                    li 
                        p Redirecting the User to Another Page
                    li
                        p Storing and retrieving data on the user's device (i.e. <a class="inline-link" aria-label="wikipedia link to http cookie article" target="_blank" rel="noopener noreferrer" role="link" href="https://en.wikipedia.org/w/index.php?title=HTTP_cookie">HTTP cookies</a>).
                p The use of JavaScript has more recently moved outside of the realm of the browser and into the server space with the advent of NodeJS arriving on the programming scene in 2009. This alone would have solidified JavaScript as the predominant programming language of the web, as it now allowed for servers as well as client side applications to be entirely written in JavaScript. Additionally, JavaScript now is utilized to create platform agnostic desktop and mobile applications using the Electron software framework and the React Native Framework respectively.
                p JavaScript's reach has expanded far and wide, especially in the realm of the web. Undoubtedly, the modern web would not have been possible without JavaScript, which leads us to the next subject of inquiry.
                h2 The History Of JavaScript
                p The history of JavaScript is closely tied to that of the Browser, and by extension, The World Wide Web. <a class="inline-link" aria-label="link to wikipedia article on the history of the world wide web" target="_blank" rel="noopener noreferrer" role="link" href="https://en.wikipedia.org/wiki/History_of_the_World_Wide_Web">The History Of The World Wide Web</a> is a subject outside the scope of this article. Sufficient to say that in 1990, one year after the inception of the World Wide Web itself, Tim Berners-Lee (the inventor of The World Wide Web) released the first web browser, simply known as the Line Mode Browser. Run from the terminal, this basic browser bore little resemblence to today's modern browsers, but demonstrated the promise of what the World Wide Web would come to fulfill, that of an easily accessible, interconnected world. As an aside, one can still run basic browsers from the terminal, <a class="inline-link" aria-label="a link to the links browser website" target="_blank" rel="noopener noreferrer" role="link" href="http://links.twibright.com/user_en.html">The Links Browser</a> is one of the oldest examples of these types of browser still in use today.
                p Three years later, in 1993, Lee would go on to release the <a class="inline-link" aria-label="a link to the wikipedia article on the mosaic browser" target="_blank" rel="noopener noreferrer" role="link" href="https://en.wikipedia.org/wiki/Mosaic_(web_browser)">Mosaic Browser</a>, which is credited as being the first web browser to gain widespread popularity. With its use of a graphical user interface instead of a terminal, the Mosaic Browser was widely considered to be much more accessible to the average person. The popularity and ease of use of The Mosaic Browser would usher in the Internet boom of the 1990s.
                p One year after The Mosaic Browser's release, Marc Andreessen, the leader of the Mosaic team, would found the company, Netscape. Their flagship product, the Netscape Navigator Browser, itself heavily inspired by The Mosaic Browser, would soon overshadow its predecessor in popularity. Shortly thereafter, in 1995, Microsoft would release the  Internet Explorer Browser, sparking a browser war with Netscape.
                p These early days of the web were filled with static sites, which, while pleasing, lacked interactivity once the page loaded. In order to interact with early web pages, one would have to initiate an event (such as a click on a button), which would cause the entire page to refresh in order for new content to be loaded onto the page. While still impressive for its time, it limited the kinds of interactions early web users could have with the pages they visited. It became apparent to those working at the forefront of this new burgeoning field to change this, to add more dynamism to user interactions with web pages. 
                p Thusly, in 1995, Netscape decided to add a scripting language to The Netscape Navigator Browser. Two routes were taken to achieve this ultimate goal. The first, in collaboration with Sun Microsystems, aimed to embed the Java Programming Language into the browser. The other route was put into the hands of a computer programmer named Brendan Eich, who was tasked with embedding the Scheme Programming Language. 
                p It wasn't long before Netscape management had determined that the best option was rather for Eich to develop a new programming language, which would incorporate syntax more similar to Java than Scheme. Although originally called "LiveScript" when first shipped with the Navigator beta in September of 1995, it was soon renamed to JavaScript when the official version release occurred in December of that year. Originally intended "to help nonprogrammers create dynamic, interactive web sites," it probably occurred to no one at the time how ubiquitous their new creation would become.
                h2 JavaScript Basics
                p While the history of JavaScript is much more extensive than this, this article will be lengthy enough without going into the entirety of JavaScript's history. Nevertheless, should you wish to find out more, I highly encourage you to <a class="inline-link" aria-label="a link to the wikipedia article on the history of javascript" target="_blank" rel="noopener noreferrer" role="link" href="https://en.wikipedia.org/w/index.php?title=JavaScript#History">read the Wikipedia article on the subject</a>. The vast majority of the remainder of this article will be an extensive introduction to general programming concepts as they relate to JavaScript, including variables, data types, conditionals, control flow statements, and functions. As I mentioned at the beginning of this article, the topic of JavaScript is vast, but it is my hope that by the end of this article, you will have been given a basic grasp on the fundamentals of working with JavaScript and how to add basic interactivity to your web pages. Let's start off with variable declarations.
                h2 Variables
            div.foot-arrows
                button.icons#up-arrow(title="back to top" aria-label="back-to-top" alt="back to top" role="navigation")
        footer(role="menu")
            div.foot-text
                ul.foot-text-menu(role="menu")
                    li.foot-text-items(role="menubar")
                        div.foot-text-item#text-sun(aria-label="light-mode-text" role="menuitem") light
                    li.foot-text-items(role="menubar")
                        div.foot-text-item#text-git(aria-label="git-text" role="menuitem") git
                    li.foot-text-items(role="menubar")
                        div.foot-text-item#text-linkedin(aria-label="linkedin-text" role="menuitem") linkedin
                    li.foot-text-items(role="menubar")
                        div.foot-text-item#text-mastodon(aria-label="mastodon-text" role="menuitem") social
                    li.foot-text-items(role="menubar")
                        div.foot-text-item#text-moon(aria-label="dark-mode-text" role="menuitem") dark
            div.foot-division
            ul.foot-menu(role="menu")
                li.foot-items(role="menuitem")
                    button.footer-button#sun-button
                        div.icons#sun(aria-label="light-mode" role="button") light
                li.foot-items(role="menuitem")
                    a.icons#git(aria-label="git" role="link" target="_blank" rel="noopener noreferrer" href="https://github.com/tomit4") git
                li.foot-items(role="menuitem")
                    a.icons#linkedin(aria-label="linkedin" target="_blank" rel="noopener noreferrer" role="link" href="https://linkedin.com/in/brian-hayes-33496067") linkedin
                li.foot-items(role="menuitem")
                    a.icons#mastodon(aria-label="social" target="_blank" rel="noopener noreferrer" role="link" href="https://mas.to/@brianhayesdev") social
                li.foot-items(role="menuitem")
                    button.footer-button#moon-button
                        div.icons#moon(aria-label="dark-mode" role="button") dark
        script(src="../index.js" defer default)
